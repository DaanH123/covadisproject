// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using covadis.Api;
using covadis.Api.Context;

#nullable disable

namespace covadis.Api.Migrations
{
    [DbContext(typeof(DbContextCovadis))]
    partial class DbContextCovadisModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("covadis.Api.Models.Adress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RegistrationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Straat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StraatNr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("covadis.Api.Models.Auto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Kenteken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Merk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Autos");
                });

            modelBuilder.Entity("covadis.Api.Models.Registration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("EndKM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartKM")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("covadis.Api.Models.Rit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("autoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("bestuurderId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("registratieId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("autoId");

                    b.HasIndex("bestuurderId");

                    b.HasIndex("registratieId");

                    b.ToTable("Ritten");
                });

            modelBuilder.Entity("covadis.Api.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("covadis.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("covadis.Api.Models.Werknemer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoonNr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("werknemers");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("covadis.Api.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("covadis.Api.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("covadis.Api.Models.Adress", b =>
                {
                    b.HasOne("covadis.Api.Models.Registration", null)
                        .WithMany("Adresses")
                        .HasForeignKey("RegistrationId");
                });

            modelBuilder.Entity("covadis.Api.Models.Rit", b =>
                {
                    b.HasOne("covadis.Api.Models.Auto", "auto")
                        .WithMany("Rides")
                        .HasForeignKey("autoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("covadis.Api.Models.Werknemer", "bestuurder")
                        .WithMany()
                        .HasForeignKey("bestuurderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("covadis.Api.Models.Registration", "registratie")
                        .WithMany()
                        .HasForeignKey("registratieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("auto");

                    b.Navigation("bestuurder");

                    b.Navigation("registratie");
                });

            modelBuilder.Entity("covadis.Api.Models.Auto", b =>
                {
                    b.Navigation("Rides");
                });

            modelBuilder.Entity("covadis.Api.Models.Registration", b =>
                {
                    b.Navigation("Adresses");
                });
#pragma warning restore 612, 618
        }
    }
}
